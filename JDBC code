//package jdbc.project;

import java.sql.*;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * @author Agaby
 */
public class JDBCProject {
    static String USER;
    static String PASS;
    static String DBNAME;
    static final String displayFormat="%-5s%-15s%-15s%-15s\n"; //Explicitly initialized once
    static Scanner in = new Scanner(System.in);
    
//    final static String sql ="SELECT GroupName, HeadWriter, YearFormed, Subject FROM WritingGroups";
//    static Connection conn = null; //initialize the connection
//    static Statement stmt = null;  //initialize the statement that we're using
//    static ResultSet rs = stmt.executeQuery(sql);

    // JDBC driver name and database URL
    static final String JDBC_DRIVER = "org.apache.derby.jdbc.ClientDriver";
    static String DB_URL = "jdbc:derby://localhost:1527/";
    
    /*
    * Takes the input string and outputs "N/A" if the string is empty or null.
    * @param input The string to be mapped.
    * @return  Either the input string or "N/A" as appropriate.
    */
   public static String dispNull (String input) {
        //because of short circuiting, if it's null, it never checks the length.
        if (input == null || input.length() == 0)
            return "N/A";
        else
            return input;
 
    }
   /**
    public static void menu(){
        try {
            String sql ="SELECT GroupName, HeadWriter, YearFormed, Subject FROM WritingGroups";
            Connection conn = null; //initialize the connection
            Statement stmt = null;  //initialize the statement that we're using
            ResultSet rs = stmt.executeQuery(sql);
            
            String GroupName = rs.getString("GroupName");
            String HeadWriter = rs.getString("HeadWriter");
            String YearFormed = rs.getString("YearFormed");
            String Subject = rs.getString("Subject");
            
            String publisherName=rs.getString("publisherName");
            String publisherAddress=rs.getString("PublisherAddress");
            String publisherPhone= rs.getString("PublisherPhone");
            String publisherEmail=rs.getString("PublisherEmail");
            
            String bookTitle = rs.getString("BookTitle");
            String yearPublished= rs.getString("YearPublished");
            String numOfPgs= rs.getString("NumberOfPages");
            
            
            System.out.println("Choose one of the following \n"
                    + "1. List data in writing groups \n"
                    + "2. List data in  publishers \n"
                    + "3. List data in book titles");
            int ans=in.nextInt();
            
            switch(ans)
            {
                case 1:
                    System.out.println("Choose data you want to see: \n"
                            + " 1. group name \n"
                            + "2.head writer \n"
                            + "3. year formed \n"
                            + "4. subject");
                    int c1=in.nextInt();
                    switch(c1)
                    {
                        case 1: System.out.println(dispNull(GroupName));
                        break;
                        case 2: System.out.println(dispNull(HeadWriter));
                        break;
                        case 3: System.out.println(dispNull(YearFormed));
                        break;
                        case 4: System.out.println(dispNull(Subject));
                    }
                    break;
                case 2:
                    System.out.println("Choose data You want to see: \n"
                            + "1. publisher name \n"
                            + "2. publisher address \n"
                            + "3. publisher phone \n"
                            + "4. publisher email");
                    int c2=in.nextInt();
                    switch(c2)
                    {
                        case 1: System.out.println(dispNull(publisherName));
                        break;
                        case 2: System.out.println(dispNull(publisherAddress));
                        break;
                        case 3: System.out.println(dispNull(publisherPhone));
                        break;
                        case 4: System.out.println(dispNull(publisherEmail));
                        break;
                    }
                    break;
                case 3:
                    System.out.println("Choose data you want to see \n"
                            + "1. book title \n"
                            + "2. year published \n"
                            + "3. number of pages \n");
                    int c3= in.nextInt();
                    switch(c3)
                    {
                        case 1: System.out.println(dispNull(bookTitle));
                        break;
                        case 2: System.out.println(dispNull(yearPublished));
                        break;
                        case 3: System.out.println(dispNull(numOfPgs));
                        break;
                    }
                    break;
            }
        } catch (SQLException ex) {
            Logger.getLogger(JDBCProject.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        }
        **/
    public static void main(String[] args) {
        
        /*
        *Prompt the user for the database name, and the credentials.
        *If your database has no credentials, you can update this code to
        *remove that from the connection string.
        */
        
        System.out.print("Name of the database (not the user account): ");
        DBNAME = in.nextLine();
        System.out.print("Database user name: ");
        USER = in.nextLine();
        System.out.print("Database password: ");
        PASS = in.nextLine();
        DB_URL = DB_URL + DBNAME + ";user="+ USER + ";password=" + PASS;
        
        Connection conn = null; //initialize the connection
        Statement stmt = null, stmt2=null, stmt3=null;  //initialize the statement that we're using
       
        
        try {
            //STEP 2: Register JDBC driver
            Class.forName("org.apache.derby.jdbc.ClientDriver"); //why was this commented?

            //STEP 3: Open a connection
            System.out.println("Connecting to database...");
            conn = DriverManager.getConnection(DB_URL);

            //STEP 4: Execute a query
            System.out.println("Creating statement...");
            stmt = conn.createStatement();
            stmt2=conn.createStatement();
            stmt3=conn.createStatement();
            
            String sql1;
            sql1 = "SELECT GroupName, HeadWriter, YearFormed, Subject FROM WritingGroups ";
            ResultSet rs = stmt.executeQuery(sql1);
            
            String sql2= "SELECT PublisherName,PublisherAddress,PublisherPhone, PublisherEmail FROM Publishers ";
            ResultSet rs2= stmt2.executeQuery(sql2);
            
            String sql3="SELECT BookTitle,YearPublished, NumberPages FROM Books ";
            ResultSet rs3= stmt3.executeQuery(sql3);

            //let user choose
            
            while (rs.next() && rs2.next() && rs3.next()) {
            String GroupName = rs.getString("GroupName");
            String HeadWriter = rs.getString("HeadWriter");
            String YearFormed = rs.getString("YearFormed");
            String Subject = rs.getString("Subject");
            
            String PublisherName=rs2.getString("publisherName");
            String PublisherAddress=rs2.getString("PublisherAddress");
            String PublisherPhone= rs2.getString("PublisherPhone");
            String PublisherEmail=rs2.getString("PublisherEmail");
            
            String BookTitle = rs3.getString("BookTitle");
            String YearPublished= rs3.getString("YearPublished");
            String NumOfPgs= rs3.getString("NumberPages");
            
            
            System.out.println("Choose one of the following \n"
                    + "1. List data in writing groups \n"
                    + "2. List data in  publishers \n"
                    + "3. List data in book titles");
            int ans=in.nextInt();
            
            switch(ans)
            {
                case 1:
                    System.out.println("Choose data you want to see: \n"
                            + " 1. group name \n"
                            + "2.head writer \n"
                            + "3. year formed \n"
                            + "4. subject");
                    int c1=in.nextInt();
                    switch(c1)
                    {
                        case 1: System.out.println(dispNull(GroupName));
                        break;
                        case 2: System.out.println(dispNull(HeadWriter));
                        break;
                        case 3: System.out.println(dispNull(YearFormed));
                        break;
                        case 4: System.out.println(dispNull(Subject));
                    }
                    break;
                case 2:
                    System.out.println("Choose data You want to see: \n"
                            + "1. publisher name \n"
                            + "2. publisher address \n"
                            + "3. publisher phone \n"
                            + "4. publisher email");
                    int c2=in.nextInt();
                    switch(c2)
                    {
                        case 1: System.out.println(dispNull(PublisherName));
                        break;
                        case 2: System.out.println(dispNull(PublisherAddress));
                        break;
                        case 3: System.out.println(dispNull(PublisherPhone));
                        break;
                        case 4: System.out.println(dispNull(PublisherEmail));
                        break;
                    }
                    break;
                case 3:
                    System.out.println("Choose data you want to see \n"
                            + "1. book title \n"
                            + "2. year published \n"
                            + "3. number of pages \n");
                    int c3= in.nextInt();
                    switch(c3)
                    {
                        case 1: System.out.println(dispNull(BookTitle));
                        break;
                        case 2: System.out.println(dispNull(YearPublished));
                        break;
                        case 3: System.out.println(dispNull(NumOfPgs));
                        break;
                    }
                    break;
            } 
            }
            
            
            
            //STEP 5: Extract data from result set
            System.out.printf(displayFormat, "Group Name       ", "Head Writer       ", "Year Formed       ", "Subject       ");
            while (rs.next()) {
                //Retrieve by column name
                String GroupName = rs.getString("GroupName");
                String HeadWriter = rs.getString("HeadWriter");
                String YearFormed = rs.getString("YearFormed");
                String Subject = rs.getString("Subject");

                //Display values
                System.out.printf(displayFormat,
                        dispNull(GroupName)+"       ", dispNull(HeadWriter)+"       ",
                        dispNull(YearFormed)+"       ", dispNull(Subject)+"       ");
            }
            
            //STEP 6: Clean-up environment
            rs.close();
            stmt.close();
            conn.close();
        } catch (SQLException se) {
            //Handle errors for JDBC
            se.printStackTrace();
        } catch (Exception e) {
            //Handle errors for Class.forName
            e.printStackTrace();
        } finally {
            //finally block used to close resources
            try {
                if (stmt != null) {
                    stmt.close();
                }
            } catch (SQLException se2) {
            }// nothing we can do
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }//end finally try
        }//end try
    }  
}
