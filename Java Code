//package jdbc.project;

import java.sql.*;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * @author Agaby
 */
public class JDBCProject {
    static String USER;
    static String PASS;
    static String DBNAME;
    static final String displayFormat="%-5s%-15s%-15s%-15s\n"; //Explicitly initialized once
 
            
//    final static String sql ="SELECT GroupName, HeadWriter, YearFormed, Subject FROM WritingGroups";
//    static Connection conn = null; //initialize the connection
//    static Statement stmt = null;  //initialize the statement that we're using
//    static ResultSet rs = stmt.executeQuery(sql);

    // JDBC driver name and database URL
    static final String JDBC_DRIVER = "org.apache.derby.jdbc.ClientDriver";
    static String DB_URL = "jdbc:derby://localhost:1527/";
    
    /*
    * Takes the input string and outputs "N/A" if the string is empty or null.
    * @param input The string to be mapped.
    * @return  Either the input string or "N/A" as appropriate.
    */
   public static String dispNull (String input) {
        //because of short circuiting, if it's null, it never checks the length.
        if (input == null || input.length() == 0)
            return "N/A";
        else
            return input;
 
    }
           
    public static void main(String[] args) {
        
        /*
        *Prompt the user for the database name, and the credentials.
        *If your database has no credentials, you can update this code to
        *remove that from the connection string.
        */
        Scanner in = new Scanner(System.in);
        System.out.print("Name of the database (not the user account): ");
        DBNAME = in.nextLine();
        System.out.print("Database user name: ");
        USER = in.nextLine();
        System.out.print("Database password: ");
        PASS = in.nextLine();
        DB_URL = DB_URL + DBNAME + ";user="+ USER + ";password=" + PASS;
        
        Connection conn = null; //initialize the connection
        //Statement stmt = null, stmt2=null, stmt3=null;  //initialize the statement that we're using
       //menu();
        PreparedStatement  stmt = null, stmt2=null, stmt3=null, pstmt=null;  //initialize the statement that we're using
        ResultSet rs=null ,rs2=null,rs3=null;
     
        try {
            //STEP 2: Register JDBC driver
            Class.forName("org.apache.derby.jdbc.ClientDriver"); //why was this commented?

            //STEP 3: Open a connection
            System.out.println("Connecting to database...");
            conn = DriverManager.getConnection(DB_URL);

            //STEP 4: Execute a query
            
            System.out.println("Creating statement...");
            
            //***********************************Taking User input and displaying that specific row **********************************
            System.out.println("Do you want to do user input y/n");
            char a=in.next().charAt(0);
        while(a=='y'){
            System.out.println("choose one of the following: \n"
                    + "1. group name \n"
                    + "2. publisher name \n"
                    + "3. book title");
            int c=in.nextInt();
           
            switch(c){
                case 1: 
                    String sql1 = "SELECT GroupName, HeadWriter, YearFormed, Subject FROM WritingGroups where GroupName=?";   
                    stmt =conn.prepareStatement(sql1);
                    System.out.println("Here are the grup names in the writing groups table: History Buffs,Science Fiction Life, Fictious Fiction, Whose Bio? ");
                    System.out.println("Type in one of the group names from above ");
                    in.nextLine();
                    String gname=in.nextLine();
                    stmt.setString(1, gname);
                    rs = stmt.executeQuery();
                    while(rs.next())
                    {
                        String GroupName = rs.getString("GroupName");
                        String HeadWriter = rs.getString("HeadWriter");
                        String YearFormed = rs.getString("YearFormed");
                        String Subject = rs.getString("Subject");
                        System.out.println("GroupName= "+GroupName +"HeadWriter= "+HeadWriter+ "YearFormed= "+YearFormed+"Subject= "+Subject );
                      
                    }
                break;
                case 2: 
                    String sql2= "SELECT PublisherName,PublisherAddress,PublisherPhone, PublisherEmail FROM Publishers where PublisherName=? ";
                    stmt2= conn.prepareStatement(sql2);
                    System.out.println("Here are the publisher names form the publishers table: Will Norton, Neil Wong, Anel Ruiz, Sergio Perez");
                    System.out.println("Type in one of the  publisher names from above");
                    in.nextLine();
                    String pubName=in.nextLine();
                    stmt2.setString(1, pubName);
                    rs2= stmt2.executeQuery();
                    while(rs2.next())
                    {
                        String PublisherName=rs2.getString("PublisherName");
                        String PublisherAddress=rs2.getString("PublisherAddress");
                        String PublisherPhone= rs2.getString("PublisherPhone");
                        String PublisherEmail=rs2.getString("PublisherEmail");
                        System.out.println("PublisherName= "+PublisherName+"PublisherAddress= "+PublisherAddress
                                        +"PublisherPhone= "+PublisherPhone+"PublisherEmail= "+PublisherEmail);

                    }
                break;
                case 3:
                   String sql3="SELECT BookTitle, YearPublished, NumberPages, "
                           + "GroupName, HeadWriter, YearFormed, Subject, "
                           + "PublisherName, PublisherAddress, PublisherPhone, PublisherEmail "
                           + "from Books natural join  WRITINGGROUPS natural join PUBLISHERS  where BookTitle=?";
//                 String sql4="Select BookTitle, YearPublished, NumberPages, GroupName, PublisherName from books where BookTitle=?";
                   stmt3= conn.prepareStatement(sql3);
                   System.out.println("Here are the book titles from the books table: The 1987, World War II, Real Monsters, John F. Kennedy ");
                   System.out.println("Type in one of the book titles from above");
                   in.nextLine();
                   String bname=in.nextLine();
                    System.out.println("bname= "+bname);
                   stmt3.setString(1, bname);
                   rs3= stmt3.executeQuery();
                   while(rs3.next())
                   {
                       String BookTitle=rs3.getString("BookTitle");
                       String YearPublished = rs3.getString("YearPublished");
                       String NumberPages= rs3.getString("NumberPages");
                       String GroupName= rs3.getString("GroupName");
                       String HeadWriter=rs3.getString("HeadWriter");
                       String YearFormed=rs3.getString("YearFormed");
                       String Subject=rs3.getString("Subject");
                       String PublisherName=rs3.getString("PublisherName");
                       String PublisherAddress=rs3.getString("PublisherAddress");
                       String PublisherPhone= rs3.getString("PublisherPhone");
                       String PublisherEmail=rs3.getString("PublisherEmail");
                        
//                       System.out.println("BookTitle= "+BookTitle+" YearPublished= "+" NumberPages= "+ NumberPages+" GroupName= "+GroupName+" PublisherName= "+PublisherName);
                       System.out.println("BookTitle= "+BookTitle +" YearPublished= "+YearPublished+
                               " NumberPages= "+NumberPages+" GroupName= "+GroupName+ " HeadWriter= "+HeadWriter +" YearFormed= "
                               +YearFormed+" Subject= " +Subject+ " PublisherName= "+PublisherName
                                       + " PublisherAddress= "+PublisherAddress+ " PublisherPhone "
                                       +PublisherPhone+" PublisherEmail= "+PublisherEmail);
                    
                   }
                break;
            }
             System.out.println("Do you want to do user input again y/n");
             a=in.next().charAt(0);
            if(a=='n')
            {
                System.out.println("Bye");
                break;
            }
           
        }   
        //*******Update WritingGroups*************
            System.out.println("Do you want to insert into the records? y/n");
            char ans=in.next().charAt(0);
            while(ans=='y')
            {
                 System.out.println("Inserting records into the table...");
              // PREPARED STATEMENT
             String PUpdateSQL = "Update WritingGroups SET GroupName = ? WHERE Subject = ?";
             String PInsertSQL = "INSERT INTO WritingGroups VALUES (?, ?, ?, ?)";
             pstmt = conn.prepareStatement(PInsertSQL);
             //*******************************************************
             //READ INPUT FROM USER
             System.out.println("Input a name: ");
             Scanner scan = new Scanner(System.in);
             String gname = scan.next();
             System.out.println("Input a writer: ");
             String gwriter = scan.next();
             System.out.println("Input a year: ");
             int gyear = scan.nextInt();
             System.out.println("Input a subject: ");
             String gsub = scan.next();
             pstmt.setString(1, gname); //CHANGE //Test1Name Test1Writer 2017 Test1Subject
             pstmt.setString(2, gwriter);//tell Aimee she had the subject here--repeated
             pstmt.setInt(3, gyear);
             pstmt.setString(4, gsub);
             //int i = scan.nextInt();
             pstmt.executeUpdate();
              //*******************************************************
             //DISPLAY INFROMATION FROM TABLE
            String Selectsql = "SELECT GroupName, HeadWriter, YearFormed, Subject FROM WritingGroups";
            ResultSet rs4 = stmt.executeQuery(Selectsql);
            while(rs4.next())
            {
             String GroupName = rs4.getString("GroupName");
             String HeadWriter = rs4.getString("HeadWriter");
             String YearFormed = rs4.getString("YearFormed");
             String Subject = rs4.getString("Subject");
             System.out.println("GroupName= "+GroupName +"HeadWriter= "+HeadWriter+ "YearFormed= "+YearFormed+"Subject= "+Subject );
                      
            }
        //**********Update publishers**********************
            String PUpdateSQL2 = "Update Publishers SET PublisherName = ? WHERE Subject = ?";
            String PInsertSQL2 = "INSERT INTO Publishers VALUES (?, ?, ?, ?)";
            

            }
        
        
            
            //STEP 5: Extract data from result set
            System.out.printf(displayFormat, "Group Name       ", "Head Writer       ", "Year Formed       ", "Subject       ");
//            stmt =conn.prepareStatement("SELECT GroupName, HeadWriter, YearFormed, Subject FROM WritingGroups where GroupName=?");
//            stmt.setInt(1, 00000101);
//             rs = stmt.executeQuery();
//            while (rs.next()) {
//                //Retrieve by column name
//                String GroupName = rs.getString("GroupName");
//                String HeadWriter = rs.getString("HeadWriter");
//                String YearFormed = rs.getString("YearFormed");
//                String Subject = rs.getString("Subject");
//
//                //Display values
//                System.out.printf(displayFormat,
//                        dispNull(GroupName)+"       ", dispNull(HeadWriter)+"       ",
//                        dispNull(YearFormed)+"       ", dispNull(Subject)+"       ");
//            }
            //STEP 6: Clean-up environment
            rs.close();
            rs2.close();
            rs3.close();
            stmt2.close();
            stmt3.close();
            stmt.close();
            conn.close();
            in.close();
        } catch (SQLException se) {
            //Handle errors for JDBC
            se.printStackTrace();
        } catch (Exception e) {
            //Handle errors for Class.forName
            e.printStackTrace();
        } finally {
            //finally block used to close resources
            try {
                if (stmt != null) {
                    stmt.close();
                }
            } catch (SQLException se2) {
            }// nothing we can do
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }//end finally try
        }//end try
    }  

    private static Connection getConnection() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
