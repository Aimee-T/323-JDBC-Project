/*
* JDBC Project
* Authors: Agaby Azer
*          Aimee Threlkeld
*/

import java.sql.*;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

public class JDBCProject {
    static String USER = "a";
    static String PASS = "a";
    static String DBNAME = "JDBC_proj";
    static final String displayFormat="%-5s%-15s%-15s%-15s\n";
 
            
//    final static String sql ="SELECT GroupName, HeadWriter, YearFormed, Subject FROM WritingGroups";
//    static Connection conn = null; //initialize the connection
//    static Statement stmt = null;  //initialize the statement that we're using
//    static ResultSet rs = stmt.executeQuery(sql);

    // JDBC driver name and database URL
    static final String JDBC_DRIVER = "org.apache.derby.jdbc.ClientDriver";
    static String DB_URL = "jdbc:derby://localhost:1527/";
    
    /*
    * Takes the input string and outputs "N/A" if the string is empty or null.
    * @param input The string to be mapped.
    * @return  Either the input string or "N/A" as appropriate.
    */
   public static String dispNull (String input) {
        //because of short circuiting, if it's null, it never checks the length.
        if (input == null || input.length() == 0)
            return "N/A";
        else
            return input;
 
    }
  
   public static void case1(Connection conn,ResultSet rs,  PreparedStatement  stmt, Scanner in ) throws SQLException
   {
       
                    String GroupName="";
                    boolean valid=false;
                
                    String sql1 = "SELECT GroupName, HeadWriter, YearFormed, Subject FROM WritingGroups where GroupName=?";   
                    stmt =conn.prepareStatement(sql1);
                    System.out.println("Here are the grup names in the writing groups table: History Buffs,Science Fiction Life, Fictious Fiction, Whose Bio? ");
                    System.out.println("Type in one of the group names from above ");
                    in.nextLine();
                    String gname=in.nextLine();
               
                    stmt.setString(1, gname);
                    rs = stmt.executeQuery();
                    while(rs.next())
                    {
                        GroupName = rs.getString("GroupName");
                        String HeadWriter = rs.getString("HeadWriter");
                        String YearFormed = rs.getString("YearFormed");
                        String Subject = rs.getString("Subject");
                        System.out.println("GroupName= "+GroupName +"HeadWriter= "+HeadWriter+ "YearFormed= "+YearFormed+"Subject= "+Subject );
                       
                    }
                   
                     rs.close();
                    stmt.close();
   }
   public static void case2(Connection conn, ResultSet rs2,  PreparedStatement  stmt2, Scanner in ) throws SQLException
   {
        String sql2= "SELECT PublisherName,PublisherAddress,PublisherPhone, PublisherEmail FROM Publishers where PublisherName=? ";
                    stmt2= conn.prepareStatement(sql2);
                    System.out.println("Here are the publisher names form the publishers table: Will Norton, Neil Wong, Anel Ruiz, Sergio Perez");
                    System.out.println("Type in one of the  publisher names from above");
                    in.nextLine();
                    String pubName=in.nextLine();
                    stmt2.setString(1, pubName);
                    rs2= stmt2.executeQuery();
                    while(rs2.next())
                    {
                        String PublisherName2=rs2.getString("PublisherName");
                        String PublisherAddress=rs2.getString("PublisherAddress");
                        String PublisherPhone= rs2.getString("PublisherPhone");
                        String PublisherEmail=rs2.getString("PublisherEmail");
                        System.out.println("PublisherName= "+PublisherName2+"PublisherAddress= "+PublisherAddress
                                        +"PublisherPhone= "+PublisherPhone+"PublisherEmail= "+PublisherEmail);

                    }
                    
                    rs2.close();
                    stmt2.close();
   }
   public static void case3(Connection conn, ResultSet rs3,  PreparedStatement  stmt3, Scanner in ) throws SQLException
   {
        String sql3="SELECT BookTitle, YearPublished, NumberPages, "
                           + "GroupName, HeadWriter, YearFormed, Subject, "
                           + "PublisherName, PublisherAddress, PublisherPhone, PublisherEmail "
                           + "from Books natural join  WRITINGGROUPS natural join PUBLISHERS  where BookTitle=?";
//                 String sql4="Select BookTitle, YearPublished, NumberPages, GroupName, PublisherName from books where BookTitle=?";
                   stmt3= conn.prepareStatement(sql3);
                   System.out.println("Here are the book titles from the books table: The 1987, World War II, Real Monsters, John F. Kennedy ");
                   System.out.println("Type in one of the book titles from above");
                   in.nextLine();
                   String bname=in.nextLine();
                   stmt3.setString(1, bname);
                   rs3= stmt3.executeQuery();
                   while(rs3.next())
                   {
                       String BookTitle=rs3.getString("BookTitle");
                       String YearPublished = rs3.getString("YearPublished");
                       String NumberPages= rs3.getString("NumberPages");
                       String GroupName1= rs3.getString("GroupName");
                       String HeadWriter=rs3.getString("HeadWriter");
                       String YearFormed=rs3.getString("YearFormed");
                       String Subject=rs3.getString("Subject");
                       String PublisherName3=rs3.getString("PublisherName");
                       String PublisherAddress=rs3.getString("PublisherAddress");
                       String PublisherPhone= rs3.getString("PublisherPhone");
                       String PublisherEmail=rs3.getString("PublisherEmail");                        
                       System.out.println("BookTitle= "+BookTitle +" YearPublished= "+YearPublished+
                               " NumberPages= "+NumberPages+" GroupName= "+GroupName1+ " HeadWriter= "+HeadWriter +" YearFormed= "
                               +YearFormed+" Subject= " +Subject+ " PublisherName= "+PublisherName3
                                       + " PublisherAddress= "+PublisherAddress+ " PublisherPhone "
                                       +PublisherPhone+" PublisherEmail= "+PublisherEmail);
                   }                   
                   rs3.close();
                   stmt3.close();
   }
     
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        DB_URL = DB_URL + DBNAME + ";user="+ USER + ";password=" + PASS;
        
        Connection conn = null;
        PreparedStatement  stmt = null, stmt2=null, stmt3=null, bpstmt=null, ppstmt=null;
        ResultSet rs=null ,rs2=null,rs3=null;
        String GroupName ="",PublisherName="", BookTitle="";
        
        
        try {            
            //STEP 2: Register JDBC driver
            Class.forName("org.apache.derby.jdbc.ClientDriver"); //why was this commented?

            //STEP 3: Open a connection
            System.out.println("Connecting to database...");
            conn = DriverManager.getConnection(DB_URL);

            //STEP 4: Execute a query
            System.out.println("List tables? y/n");
            char choose=in.next().charAt(0);
            while(choose!='y'&& choose!='n')
            {
                System.out.println("Wrong input");
                System.out.println("List tables? y/n");
                choose=in.next().charAt(0);
            }
            
            while(choose=='y')
            {
                System.out.println("Choose from the following: \n"
                    + "1. Display Groups \n"
                    + "2. Display Books \n"
                    + "3. Display Publishers \n");
            int num=in.nextInt();
            while(num!=1 && num!=2 && num!=3)
            {
                System.out.println("Wrong input");
                 System.out.println("Choose from the following: \n"
                    + "1. Display Groups \n"
                    + "2. Display Books \n"
                    + "3. Display Publishers \n");
                 num=in.nextInt();
            }
            switch(num){
                case 1: 
                    displayGroups(conn);
                    break;
                case 2: 
                    displayBooks(conn);
                    break;
                case 3: 
                    displayPublishers(conn);
                    break;
                
             }
                System.out.println("List tables again? y/n");
                 choose=in.next().charAt(0);
                 while(choose!='y'&& choose!='n')
                {
                System.out.println("Wrong input");
                System.out.println("List tables? y/n");
                choose=in.next().charAt(0);
                }
                 if(choose=='n')
                 {
                    System.out.println("Ok bye");
                 }
            
            }
            //nsertPublisher(conn);
            updatePublisher(conn);
            //insertBook(conn);
            
            //***********************************Taking User input and displaying that specific row **********************************
            System.out.println("Do you want to display certain data? y/n");
            char a =in.next().charAt(0);
            while(a!='y'&& a!='n')
            {
                System.out.println("Wrong input");
                System.out.println("Do you want to display certain data? y/n");
                a=in.next().charAt(0);
            }
        while(a=='y'){
            System.out.println("choose one of the following tables: \n"
                    + "1. writing groups \n"
                    + "2. publishers \n"
                    + "3. book ");
            int c=in.nextInt();
           
            switch(c){
                case 1: 
                    case1(conn,rs,stmt,in);
                  
                break;
                case 2: 
                   case2( conn,  rs2,    stmt2,  in );
                break;
                case 3:
                  case3(conn,  rs2,    stmt2,  in );
                break;
            }
             System.out.println("Do you want to choose again? y/n");
            a =in.next().charAt(0);
            while(a!='y'&& a!='n')
            {
                System.out.println("Wrong input");
                System.out.println("Do you want to choose again? y/n");
                a=in.next().charAt(0);
            }
            
        }   
     
           
            
            conn.close();
            in.close();
        } catch (SQLException se) {
            //Handle errors for JDBC
            se.printStackTrace();
        } catch (Exception e) {
            //Handle errors for Class.forName
            e.printStackTrace();
        } finally {
            //finally block used to close resources
            try {
                if (stmt != null) {
                    stmt.close();
                }
            } catch (SQLException se2) {
            }// nothing we can do
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }//end finally try
        }//end try
    }  

     public static void insertPublisher(Connection conn) throws SQLException
    {
        System.out.println("Inserting a new publisher...");
        Statement stmt = null;
        stmt = conn.createStatement();
        String sql="INSERT INTO Publishers "
                + "VALUES('Johnny Dave', '1234 Atherton st' , '1234567890', 'Johnny@gmail.com')";
        stmt.executeUpdate(sql);
        System.out.println("Insert complete, displaying publishers...");
        displayPublishers(conn);
    }
    
    public static void updatePublisher(Connection conn) throws SQLException
    {
        ResultSet rs=null;
        System.out.println("Updating Publisher...");
        //Johnny is to replace neil
        Statement stmt = null;
        stmt = conn.createStatement();
        
        String UpdateSQL= "Update BOOKS set PublisherName='Johnny Dave' where PublisherName = 'Neil Wong'";
        stmt.executeLargeUpdate(UpdateSQL); 
        
        
        String SelectSQL = "SELECT PublisherName FROM Publishers";
        rs = stmt.executeQuery(SelectSQL);
        int i=1;
        System.out.println("Book now under new publisher");
        while(rs.next())
        {
            String pubname=rs.getString("PublisherName");
        }
        stmt.close();
        rs.close();
        System.out.println("Update complete, displaying Books...");
        displayBooks(conn);
    }
    
     public static void insertBook(Connection conn) throws SQLException
         {
              Statement stmt = null;
              System.out.println("Inserting records into the table...");
              stmt = conn.createStatement();

              String sql = "INSERT INTO Books " +
                           "VALUES ('Whose Bio?','grace 2', 'Anel Ruiz', 1994, 100)";
              stmt.executeUpdate(sql);
              sql = "INSERT INTO Books " +
                           "VALUES ('Science Fiction Life','Whose the real monster', 'Neil Wong', 1994, 100)";
              stmt.executeUpdate(sql);
              System.out.println("Inserted records into the table...");
              displayBooks(conn);
         }
     
     public static void displayGroups (Connection conn) throws SQLException
        {
            Statement stmt = null;
            String Selectsql = "SELECT GroupName, HeadWriter, YearFormed, Subject FROM WritingGroups";
            stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(Selectsql);
            
            System.out.printf("DISPLAYING GROUP TABLE\n");    
            System.out.printf(" Group Name\n Head Writer\n Year Formed\n Subject\n");
            while (rs.next()) {
                //Retrieve by column name
                String GroupName = rs.getString("GroupName");
                String HeadWriter = rs.getString("HeadWriter");
                String YearFormed = rs.getString("YearFormed");
                String Subject = rs.getString("Subject");

                //Display values
                System.out.printf("\n");
                System.out.printf(dispNull(GroupName));
                System.out.printf("\n");
                System.out.printf(dispNull(HeadWriter));
                System.out.printf("\n");
                System.out.printf(dispNull(YearFormed));
                System.out.printf("\n");
                System.out.printf(dispNull(Subject));
                System.out.printf("\n\n");
            }
            //CLOSE AND CLEAN ENVIORNMENT
            rs.close();
            stmt.close();
        }
     
     public static void displayBooks (Connection conn) throws SQLException
        {
            Statement stmt = null;
            String Selectsql = "SELECT GroupName, BookTitle, PublisherName, YearPublished, NumberPages FROM Books";
            stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(Selectsql);

            System.out.printf("DISPLAYING BOOK TABLE\n");
            System.out.printf(" Group Name\n Book Title\n Publisher Name\n Year Published\n Number of Pages\n");
            while (rs.next()) {
                //Retrieve by column name
                String GroupName = rs.getString("GroupName");
                String BookTitle = rs.getString("BookTitle");
                String PublisherName = rs.getString("PublisherName");
                String YearPublished = rs.getString("YearPublished");
                String NumberPages = rs.getString("NumberPages");

                //Display values
                System.out.printf("\n");
                System.out.printf(dispNull(GroupName));
                System.out.printf("\n");
                System.out.printf(dispNull(BookTitle));
                System.out.printf("\n");
                System.out.printf(dispNull(PublisherName));
                System.out.printf("\n");
                System.out.printf(dispNull(YearPublished));
                System.out.printf("\n");
                System.out.printf(dispNull(NumberPages));
                System.out.printf("\n\n");
            }
            //CLOSE AND CLEAN ENVIORNMENT
            rs.close();
            stmt.close();
        }
     // FUNCTION TO DISPLAY PUBLISHERS 
         public static void displayPublishers (Connection conn) throws SQLException
        {
            Statement stmt = null;
            String Selectsql = "SELECT PublisherName, PublisherAddress, PublisherPhone, PublisherEmail FROM Publishers";
            stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(Selectsql);

            System.out.printf("DISPLAYING PUBLISHER TABLE\n");
            System.out.printf(" Publisher Name\n Publisher Address\n Publisher Phone\n Publisher Email\n");
            while (rs.next()) {
                //Retrieve by column name
                String PubName = rs.getString("PublisherName");
                String PubAddress = rs.getString("PublisherAddress");
                String PubPhone = rs.getString("PublisherPhone");
                String PubEmail = rs.getString("PublisherEmail");

                //Display values
                System.out.printf("\n");
                System.out.printf(dispNull(PubName));
                System.out.printf("\n");
                System.out.printf(dispNull(PubAddress));
                System.out.printf("\n");
                System.out.printf(dispNull(PubPhone));
                System.out.printf("\n");
                System.out.printf(dispNull(PubEmail));
                System.out.printf("\n\n");
            }
            //CLOSE AND CLEAN ENVIORNMENT
            rs.close();
            stmt.close();
        }
}
